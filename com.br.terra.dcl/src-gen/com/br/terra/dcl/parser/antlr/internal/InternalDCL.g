/*
 * generated by Xtext
 */
grammar InternalDCL;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package com.br.terra.dcl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.br.terra.dcl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.br.terra.dcl.services.DCLGrammarAccess;

}

@parser::members {

 	private DCLGrammarAccess grammarAccess;
 	
    public InternalDCLParser(TokenStream input, DCLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected DCLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='architecturalElements' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getModelAccess().getArchitecturalElementsKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getStructureElementsDCLStructureElementParserRuleCall_2_0()); 
	    }
		lv_structureElements_2_0=ruleDCLStructureElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"structureElements",
        		lv_structureElements_2_0, 
        		"com.br.terra.dcl.DCL.DCLStructureElement");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getModelAccess().getRightCurlyBracketKeyword_3());
    }
	otherlv_4='restrictions' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getModelAccess().getRestrictionsKeyword_4());
    }
	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getDCDeclDCDeclParserRuleCall_6_0()); 
	    }
		lv_dCDecl_6_0=ruleDCDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"dCDecl",
        		lv_dCDecl_6_0, 
        		"com.br.terra.dcl.DCL.DCDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getModelAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleDCLStructureElement
entryRuleDCLStructureElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDCLStructureElementRule()); }
	 iv_ruleDCLStructureElement=ruleDCLStructureElement 
	 { $current=$iv_ruleDCLStructureElement.current; } 
	 EOF 
;

// Rule DCLStructureElement
ruleDCLStructureElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDCLStructureElementAccess().getDCLManagedSubsystemParserRuleCall_0()); 
    }
    this_DCLManagedSubsystem_0=ruleDCLManagedSubsystem
    { 
        $current = $this_DCLManagedSubsystem_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDCLStructureElementAccess().getDCLManagingSubsystemParserRuleCall_1()); 
    }
    this_DCLManagingSubsystem_1=ruleDCLManagingSubsystem
    { 
        $current = $this_DCLManagingSubsystem_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDCLStructureElementAccess().getDCLMonitorParserRuleCall_2()); 
    }
    this_DCLMonitor_2=ruleDCLMonitor
    { 
        $current = $this_DCLMonitor_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDCLStructureElementAccess().getDCLPlannerParserRuleCall_3()); 
    }
    this_DCLPlanner_3=ruleDCLPlanner
    { 
        $current = $this_DCLPlanner_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDCLStructureElementAccess().getDCLAnalyzerParserRuleCall_4()); 
    }
    this_DCLAnalyzer_4=ruleDCLAnalyzer
    { 
        $current = $this_DCLAnalyzer_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDCLStructureElementAccess().getDCLExecutorParserRuleCall_5()); 
    }
    this_DCLExecutor_5=ruleDCLExecutor
    { 
        $current = $this_DCLExecutor_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDCLStructureElementAccess().getDCLSensorParserRuleCall_6()); 
    }
    this_DCLSensor_6=ruleDCLSensor
    { 
        $current = $this_DCLSensor_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDCLStructureElementAccess().getDCLActuatorParserRuleCall_7()); 
    }
    this_DCLActuator_7=ruleDCLActuator
    { 
        $current = $this_DCLActuator_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDCLStructureElementAccess().getDCLKnowledgeParserRuleCall_8()); 
    }
    this_DCLKnowledge_8=ruleDCLKnowledge
    { 
        $current = $this_DCLKnowledge_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDCLStructureElementAccess().getDCLReferencesParserRuleCall_9()); 
    }
    this_DCLReferences_9=ruleDCLReferences
    { 
        $current = $this_DCLReferences_9.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDCLStructureElementAccess().getDCLLayerParserRuleCall_10()); 
    }
    this_DCLLayer_10=ruleDCLLayer
    { 
        $current = $this_DCLLayer_10.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDCLStructureElementAccess().getDCLComponentParserRuleCall_11()); 
    }
    this_DCLComponent_11=ruleDCLComponent
    { 
        $current = $this_DCLComponent_11.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDCLStructureElementAccess().getDCLSubSystemParserRuleCall_12()); 
    }
    this_DCLSubSystem_12=ruleDCLSubSystem
    { 
        $current = $this_DCLSubSystem_12.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDCLStructureElementAccess().getDCLModuleParserRuleCall_13()); 
    }
    this_DCLModule_13=ruleDCLModule
    { 
        $current = $this_DCLModule_13.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDCLStructureElementAccess().getDCLComponentInterfaceParserRuleCall_14()); 
    }
    this_DCLComponentInterface_14=ruleDCLComponentInterface
    { 
        $current = $this_DCLComponentInterface_14.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleDCLManagedSubsystem
entryRuleDCLManagedSubsystem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDCLManagedSubsystemRule()); }
	 iv_ruleDCLManagedSubsystem=ruleDCLManagedSubsystem 
	 { $current=$iv_ruleDCLManagedSubsystem.current; } 
	 EOF 
;

// Rule DCLManagedSubsystem
ruleDCLManagedSubsystem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='managedSubsystem' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDCLManagedSubsystemAccess().getManagedSubsystemKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDCLManagedSubsystemAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDCLManagedSubsystemRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDCLManagedSubsystemAccess().getCommaKeyword_2_0());
    }
	otherlv_3='inManagedSubsystem:' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDCLManagedSubsystemAccess().getInManagedSubsystemKeyword_2_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDCLManagedSubsystemRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getDCLManagedSubsystemAccess().getManagedSubsystemDCLManagedSubsystemCrossReference_2_2_0()); 
	}

)
))?	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDCLManagedSubsystemAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleDCLManagingSubsystem
entryRuleDCLManagingSubsystem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDCLManagingSubsystemRule()); }
	 iv_ruleDCLManagingSubsystem=ruleDCLManagingSubsystem 
	 { $current=$iv_ruleDCLManagingSubsystem.current; } 
	 EOF 
;

// Rule DCLManagingSubsystem
ruleDCLManagingSubsystem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='managingSubsystem' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDCLManagingSubsystemAccess().getManagingSubsystemKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDCLManagingSubsystemAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDCLManagingSubsystemRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDCLManagingSubsystemAccess().getCommaKeyword_2_0());
    }
	otherlv_3='inManagingSubsystem:' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDCLManagingSubsystemAccess().getInManagingSubsystemKeyword_2_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDCLManagingSubsystemRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getDCLManagingSubsystemAccess().getManagingSubsystemDCLManagingSubsystemCrossReference_2_2_0()); 
	}

)
))?	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDCLManagingSubsystemAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleDCLMonitor
entryRuleDCLMonitor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDCLMonitorRule()); }
	 iv_ruleDCLMonitor=ruleDCLMonitor 
	 { $current=$iv_ruleDCLMonitor.current; } 
	 EOF 
;

// Rule DCLMonitor
ruleDCLMonitor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='monitor' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDCLMonitorAccess().getMonitorKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDCLMonitorAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDCLMonitorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDCLMonitorAccess().getCommaKeyword_2_0());
    }
	otherlv_3='inManagingSubsystem:' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDCLMonitorAccess().getInManagingSubsystemKeyword_2_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDCLMonitorRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getDCLMonitorAccess().getManagingSubsystemDCLManagingSubsystemCrossReference_2_2_0()); 
	}

)
))?	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDCLMonitorAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleDCLPlanner
entryRuleDCLPlanner returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDCLPlannerRule()); }
	 iv_ruleDCLPlanner=ruleDCLPlanner 
	 { $current=$iv_ruleDCLPlanner.current; } 
	 EOF 
;

// Rule DCLPlanner
ruleDCLPlanner returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='planner' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDCLPlannerAccess().getPlannerKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDCLPlannerAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDCLPlannerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDCLPlannerAccess().getCommaKeyword_2_0());
    }
	otherlv_3='inManagingSubsystem:' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDCLPlannerAccess().getInManagingSubsystemKeyword_2_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDCLPlannerRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getDCLPlannerAccess().getManagingSubsystemDCLManagingSubsystemCrossReference_2_2_0()); 
	}

)
))?	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDCLPlannerAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleDCLAnalyzer
entryRuleDCLAnalyzer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDCLAnalyzerRule()); }
	 iv_ruleDCLAnalyzer=ruleDCLAnalyzer 
	 { $current=$iv_ruleDCLAnalyzer.current; } 
	 EOF 
;

// Rule DCLAnalyzer
ruleDCLAnalyzer returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='analyzer' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDCLAnalyzerAccess().getAnalyzerKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDCLAnalyzerAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDCLAnalyzerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDCLAnalyzerAccess().getCommaKeyword_2_0());
    }
	otherlv_3='inManagingSubsystem:' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDCLAnalyzerAccess().getInManagingSubsystemKeyword_2_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDCLAnalyzerRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getDCLAnalyzerAccess().getManagingSubsystemDCLManagingSubsystemCrossReference_2_2_0()); 
	}

)
))?	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDCLAnalyzerAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleDCLExecutor
entryRuleDCLExecutor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDCLExecutorRule()); }
	 iv_ruleDCLExecutor=ruleDCLExecutor 
	 { $current=$iv_ruleDCLExecutor.current; } 
	 EOF 
;

// Rule DCLExecutor
ruleDCLExecutor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='executor' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDCLExecutorAccess().getExecutorKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDCLExecutorAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDCLExecutorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDCLExecutorAccess().getCommaKeyword_2_0());
    }
	otherlv_3='inManagingSubsystem:' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDCLExecutorAccess().getInManagingSubsystemKeyword_2_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDCLExecutorRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getDCLExecutorAccess().getManagingSubsystemDCLManagingSubsystemCrossReference_2_2_0()); 
	}

)
))?	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDCLExecutorAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleDCLSensor
entryRuleDCLSensor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDCLSensorRule()); }
	 iv_ruleDCLSensor=ruleDCLSensor 
	 { $current=$iv_ruleDCLSensor.current; } 
	 EOF 
;

// Rule DCLSensor
ruleDCLSensor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='sensor' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDCLSensorAccess().getSensorKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDCLSensorAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDCLSensorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDCLSensorAccess().getCommaKeyword_2_0());
    }
	otherlv_3='inManagingSubsystem:' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDCLSensorAccess().getInManagingSubsystemKeyword_2_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDCLSensorRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getDCLSensorAccess().getManagingSubsystemDCLManagingSubsystemCrossReference_2_2_0()); 
	}

)
))?	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDCLSensorAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleDCLActuator
entryRuleDCLActuator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDCLActuatorRule()); }
	 iv_ruleDCLActuator=ruleDCLActuator 
	 { $current=$iv_ruleDCLActuator.current; } 
	 EOF 
;

// Rule DCLActuator
ruleDCLActuator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='actuator' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDCLActuatorAccess().getActuatorKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDCLActuatorAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDCLActuatorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDCLActuatorAccess().getCommaKeyword_2_0());
    }
	otherlv_3='inManagingSubsystem:' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDCLActuatorAccess().getInManagingSubsystemKeyword_2_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDCLActuatorRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getDCLActuatorAccess().getManagingSubsystemDCLManagingSubsystemCrossReference_2_2_0()); 
	}

)
))?	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDCLActuatorAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleDCLKnowledge
entryRuleDCLKnowledge returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDCLKnowledgeRule()); }
	 iv_ruleDCLKnowledge=ruleDCLKnowledge 
	 { $current=$iv_ruleDCLKnowledge.current; } 
	 EOF 
;

// Rule DCLKnowledge
ruleDCLKnowledge returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='knowledge' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDCLKnowledgeAccess().getKnowledgeKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDCLKnowledgeAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDCLKnowledgeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDCLKnowledgeAccess().getCommaKeyword_2_0());
    }
	otherlv_3='inManagingSubsystem:' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDCLKnowledgeAccess().getInManagingSubsystemKeyword_2_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDCLKnowledgeRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getDCLKnowledgeAccess().getManagingSubsystemDCLManagingSubsystemCrossReference_2_2_0()); 
	}

)
))?	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDCLKnowledgeAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleDCLReferences
entryRuleDCLReferences returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDCLReferencesRule()); }
	 iv_ruleDCLReferences=ruleDCLReferences 
	 { $current=$iv_ruleDCLReferences.current; } 
	 EOF 
;

// Rule DCLReferences
ruleDCLReferences returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='references' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDCLReferencesAccess().getReferencesKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDCLReferencesAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDCLReferencesRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)((	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDCLReferencesAccess().getCommaKeyword_2_0_0());
    }
	otherlv_3='inManagingSubsystem:' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDCLReferencesAccess().getInManagingSubsystemKeyword_2_0_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDCLReferencesRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getDCLReferencesAccess().getManagingSubsystemDCLManagingSubsystemCrossReference_2_0_2_0()); 
	}

)
))
    |(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDCLReferencesAccess().getCommaKeyword_2_1_0());
    }
	otherlv_6='inKnowledge:' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDCLReferencesAccess().getInKnowledgeKeyword_2_1_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDCLReferencesRule());
	        }
        }
	otherlv_7=RULE_ID
	{
		newLeafNode(otherlv_7, grammarAccess.getDCLReferencesAccess().getKnowledgeDCLKnowledgeCrossReference_2_1_2_0()); 
	}

)
)))?	otherlv_8=';' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDCLReferencesAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleDCLLayer
entryRuleDCLLayer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDCLLayerRule()); }
	 iv_ruleDCLLayer=ruleDCLLayer 
	 { $current=$iv_ruleDCLLayer.current; } 
	 EOF 
;

// Rule DCLLayer
ruleDCLLayer returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='layer' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDCLLayerAccess().getLayerKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDCLLayerAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDCLLayerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDCLLayerAccess().getCommaKeyword_2());
    }
	otherlv_3='level' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDCLLayerAccess().getLevelKeyword_3());
    }
(
(
		lv_level_4_0=RULE_INT
		{
			newLeafNode(lv_level_4_0, grammarAccess.getDCLLayerAccess().getLevelINTTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDCLLayerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"level",
        		lv_level_4_0, 
        		"org.eclipse.xtext.common.Terminals.INT");
	    }

)
)((	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDCLLayerAccess().getCommaKeyword_5_0_0());
    }
	otherlv_6='inLayer:' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDCLLayerAccess().getInLayerKeyword_5_0_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDCLLayerRule());
	        }
        }
	otherlv_7=RULE_ID
	{
		newLeafNode(otherlv_7, grammarAccess.getDCLLayerAccess().getLayerDCLLayerCrossReference_5_0_2_0()); 
	}

)
))
    |(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDCLLayerAccess().getCommaKeyword_5_1_0());
    }
	otherlv_9='inSubSystem:' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getDCLLayerAccess().getInSubSystemKeyword_5_1_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDCLLayerRule());
	        }
        }
	otherlv_10=RULE_ID
	{
		newLeafNode(otherlv_10, grammarAccess.getDCLLayerAccess().getSubSystemDCLSubSystemCrossReference_5_1_2_0()); 
	}

)
))
    |(	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getDCLLayerAccess().getCommaKeyword_5_2_0());
    }
	otherlv_12='inComponent:' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getDCLLayerAccess().getInComponentKeyword_5_2_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDCLLayerRule());
	        }
        }
	otherlv_13=RULE_ID
	{
		newLeafNode(otherlv_13, grammarAccess.getDCLLayerAccess().getComponentDCLComponentCrossReference_5_2_2_0()); 
	}

)
)))?	otherlv_14=';' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getDCLLayerAccess().getSemicolonKeyword_6());
    }
)
;





// Entry rule entryRuleDCLComponent
entryRuleDCLComponent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDCLComponentRule()); }
	 iv_ruleDCLComponent=ruleDCLComponent 
	 { $current=$iv_ruleDCLComponent.current; } 
	 EOF 
;

// Rule DCLComponent
ruleDCLComponent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='component' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDCLComponentAccess().getComponentKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDCLComponentAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDCLComponentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)((	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDCLComponentAccess().getCommaKeyword_2_0_0());
    }
	otherlv_3='inLayer:' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDCLComponentAccess().getInLayerKeyword_2_0_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDCLComponentRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getDCLComponentAccess().getLayerDCLLayerCrossReference_2_0_2_0()); 
	}

)
))
    |(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDCLComponentAccess().getCommaKeyword_2_1_0());
    }
	otherlv_6='inSubSystem:' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDCLComponentAccess().getInSubSystemKeyword_2_1_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDCLComponentRule());
	        }
        }
	otherlv_7=RULE_ID
	{
		newLeafNode(otherlv_7, grammarAccess.getDCLComponentAccess().getSubSystemDCLSubSystemCrossReference_2_1_2_0()); 
	}

)
)))?	otherlv_8=';' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDCLComponentAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleDCLComponentInterface
entryRuleDCLComponentInterface returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDCLComponentInterfaceRule()); }
	 iv_ruleDCLComponentInterface=ruleDCLComponentInterface 
	 { $current=$iv_ruleDCLComponentInterface.current; } 
	 EOF 
;

// Rule DCLComponentInterface
ruleDCLComponentInterface returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='interface' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDCLComponentInterfaceAccess().getInterfaceKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDCLComponentInterfaceAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDCLComponentInterfaceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)	otherlv_2='ofComponent' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDCLComponentInterfaceAccess().getOfComponentKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDCLComponentInterfaceRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getDCLComponentInterfaceAccess().getComponentDCLStructureElementCrossReference_3_0()); 
	}

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDCLComponentInterfaceAccess().getCommaKeyword_4_0());
    }
	otherlv_5='type:' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDCLComponentInterfaceAccess().getTypeKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDCLComponentInterfaceAccess().getInterfaceTypeInterfaceTypeParserRuleCall_4_2_0()); 
	    }
		lv_interfaceType_6_0=ruleInterfaceType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDCLComponentInterfaceRule());
	        }
       		set(
       			$current, 
       			"interfaceType",
        		lv_interfaceType_6_0, 
        		"com.br.terra.dcl.DCL.InterfaceType");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_7=';' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getDCLComponentInterfaceAccess().getSemicolonKeyword_5());
    }
)
;





// Entry rule entryRuleInterfaceType
entryRuleInterfaceType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInterfaceTypeRule()); }
	 iv_ruleInterfaceType=ruleInterfaceType 
	 { $current=$iv_ruleInterfaceType.current; } 
	 EOF 
;

// Rule InterfaceType
ruleInterfaceType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_interfaceTypeName_0_1=	'provided' 
    {
        newLeafNode(lv_interfaceTypeName_0_1, grammarAccess.getInterfaceTypeAccess().getInterfaceTypeNameProvidedKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInterfaceTypeRule());
	        }
       		setWithLastConsumed($current, "interfaceTypeName", lv_interfaceTypeName_0_1, null);
	    }

    |		lv_interfaceTypeName_0_2=	'required' 
    {
        newLeafNode(lv_interfaceTypeName_0_2, grammarAccess.getInterfaceTypeAccess().getInterfaceTypeNameRequiredKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInterfaceTypeRule());
	        }
       		setWithLastConsumed($current, "interfaceTypeName", lv_interfaceTypeName_0_2, null);
	    }

)

)
)
;





// Entry rule entryRuleDCLSubSystem
entryRuleDCLSubSystem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDCLSubSystemRule()); }
	 iv_ruleDCLSubSystem=ruleDCLSubSystem 
	 { $current=$iv_ruleDCLSubSystem.current; } 
	 EOF 
;

// Rule DCLSubSystem
ruleDCLSubSystem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='subSystem' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDCLSubSystemAccess().getSubSystemKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDCLSubSystemAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDCLSubSystemRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDCLSubSystemAccess().getCommaKeyword_2_0());
    }
	otherlv_3='inSubSystem:' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDCLSubSystemAccess().getInSubSystemKeyword_2_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDCLSubSystemRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getDCLSubSystemAccess().getSubSystemDCLSubSystemCrossReference_2_2_0()); 
	}

)
))?	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDCLSubSystemAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleDCLModule
entryRuleDCLModule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDCLModuleRule()); }
	 iv_ruleDCLModule=ruleDCLModule 
	 { $current=$iv_ruleDCLModule.current; } 
	 EOF 
;

// Rule DCLModule
ruleDCLModule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='module' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDCLModuleAccess().getModuleKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDCLModuleAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDCLModuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDCLModuleAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRuleDCDecl
entryRuleDCDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDCDeclRule()); }
	 iv_ruleDCDecl=ruleDCDecl 
	 { $current=$iv_ruleDCDecl.current; } 
	 EOF 
;

// Rule DCDecl
ruleDCDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getDCDeclAccess().getOnlyOnlyParserRuleCall_0_0_0()); 
	    }
		lv_only_0_0=ruleOnly		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDCDeclRule());
	        }
       		set(
       			$current, 
       			"only",
        		lv_only_0_0, 
        		"com.br.terra.dcl.DCL.Only");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDCDeclRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getDCDeclAccess().getTDCLStructureElementCrossReference_0_1_0()); 
	}

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDCDeclAccess().getCanCanParserRuleCall_0_2_0()); 
	    }
		lv_can_2_0=ruleCan		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDCDeclRule());
	        }
       		set(
       			$current, 
       			"can",
        		lv_can_2_0, 
        		"com.br.terra.dcl.DCL.Can");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDCDeclAccess().getElementTypeElementTypeParserRuleCall_0_3_0()); 
	    }
		lv_elementType_3_0=ruleElementType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDCDeclRule());
	        }
       		set(
       			$current, 
       			"elementType",
        		lv_elementType_3_0, 
        		"com.br.terra.dcl.DCL.ElementType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDCDeclRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getDCDeclAccess().getTypeDCLStructureElementCrossReference_0_4_0()); 
	}

)
)	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDCDeclAccess().getSemicolonKeyword_0_5());
    }
)
    |((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDCDeclRule());
	        }
        }
	otherlv_6=RULE_ID
	{
		newLeafNode(otherlv_6, grammarAccess.getDCDeclAccess().getTDCLStructureElementCrossReference_1_0_0()); 
	}

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDCDeclAccess().getCannotCannotParserRuleCall_1_1_0()); 
	    }
		lv_cannot_7_0=ruleCannot		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDCDeclRule());
	        }
       		set(
       			$current, 
       			"cannot",
        		lv_cannot_7_0, 
        		"com.br.terra.dcl.DCL.Cannot");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDCDeclAccess().getElementTypeElementTypeParserRuleCall_1_2_0()); 
	    }
		lv_elementType_8_0=ruleElementType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDCDeclRule());
	        }
       		set(
       			$current, 
       			"elementType",
        		lv_elementType_8_0, 
        		"com.br.terra.dcl.DCL.ElementType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDCDeclRule());
	        }
        }
	otherlv_9=RULE_ID
	{
		newLeafNode(otherlv_9, grammarAccess.getDCDeclAccess().getTypeDCLStructureElementCrossReference_1_3_0()); 
	}

)
)	otherlv_10=';' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getDCDeclAccess().getSemicolonKeyword_1_4());
    }
)
    |((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDCDeclRule());
	        }
        }
	otherlv_11=RULE_ID
	{
		newLeafNode(otherlv_11, grammarAccess.getDCDeclAccess().getTDCLStructureElementCrossReference_2_0_0()); 
	}

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDCDeclAccess().getCanCanParserRuleCall_2_1_0()); 
	    }
		lv_can_12_0=ruleCan		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDCDeclRule());
	        }
       		set(
       			$current, 
       			"can",
        		lv_can_12_0, 
        		"com.br.terra.dcl.DCL.Can");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDCDeclAccess().getElementTypeElementTypeParserRuleCall_2_2_0()); 
	    }
		lv_elementType_13_0=ruleElementType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDCDeclRule());
	        }
       		set(
       			$current, 
       			"elementType",
        		lv_elementType_13_0, 
        		"com.br.terra.dcl.DCL.ElementType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDCDeclRule());
	        }
        }
	otherlv_14=RULE_ID
	{
		newLeafNode(otherlv_14, grammarAccess.getDCDeclAccess().getTypeDCLStructureElementCrossReference_2_3_0()); 
	}

)
)	otherlv_15=';' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getDCDeclAccess().getSemicolonKeyword_2_4());
    }
)
    |((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDCDeclRule());
	        }
        }
	otherlv_16=RULE_ID
	{
		newLeafNode(otherlv_16, grammarAccess.getDCDeclAccess().getTDCLStructureElementCrossReference_3_0_0()); 
	}

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDCDeclAccess().getCanCanParserRuleCall_3_1_0()); 
	    }
		lv_can_17_0=ruleCan		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDCDeclRule());
	        }
       		set(
       			$current, 
       			"can",
        		lv_can_17_0, 
        		"com.br.terra.dcl.DCL.Can");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDCDeclAccess().getElementTypeElementTypeParserRuleCall_3_2_0()); 
	    }
		lv_elementType_18_0=ruleElementType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDCDeclRule());
	        }
       		set(
       			$current, 
       			"elementType",
        		lv_elementType_18_0, 
        		"com.br.terra.dcl.DCL.ElementType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDCDeclAccess().getOnly2Only2ParserRuleCall_3_3_0()); 
	    }
		lv_only2_19_0=ruleOnly2		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDCDeclRule());
	        }
       		set(
       			$current, 
       			"only2",
        		lv_only2_19_0, 
        		"com.br.terra.dcl.DCL.Only2");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDCDeclRule());
	        }
        }
	otherlv_20=RULE_ID
	{
		newLeafNode(otherlv_20, grammarAccess.getDCDeclAccess().getTypeDCLStructureElementCrossReference_3_4_0()); 
	}

)
)	otherlv_21=';' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getDCDeclAccess().getSemicolonKeyword_3_5());
    }
)
    |((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDCDeclRule());
	        }
        }
	otherlv_22=RULE_ID
	{
		newLeafNode(otherlv_22, grammarAccess.getDCDeclAccess().getTDCLStructureElementCrossReference_4_0_0()); 
	}

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDCDeclAccess().getMustMustParserRuleCall_4_1_0()); 
	    }
		lv_must_23_0=ruleMust		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDCDeclRule());
	        }
       		set(
       			$current, 
       			"must",
        		lv_must_23_0, 
        		"com.br.terra.dcl.DCL.Must");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDCDeclAccess().getEntityTypeEntityTypeParserRuleCall_4_2_0()); 
	    }
		lv_entityType_24_0=ruleEntityType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDCDeclRule());
	        }
       		set(
       			$current, 
       			"entityType",
        		lv_entityType_24_0, 
        		"com.br.terra.dcl.DCL.EntityType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDCDeclRule());
	        }
        }
	otherlv_25=RULE_ID
	{
		newLeafNode(otherlv_25, grammarAccess.getDCDeclAccess().getTypeDCLStructureElementCrossReference_4_3_0()); 
	}

)
)	otherlv_26=';' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getDCDeclAccess().getSemicolonKeyword_4_4());
    }
))
;





// Entry rule entryRuleOnly
entryRuleOnly returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOnlyRule()); }
	 iv_ruleOnly=ruleOnly 
	 { $current=$iv_ruleOnly.current; } 
	 EOF 
;

// Rule Only
ruleOnly returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_only_0_0=	'only' 
    {
        newLeafNode(lv_only_0_0, grammarAccess.getOnlyAccess().getOnlyOnlyKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOnlyRule());
	        }
       		setWithLastConsumed($current, "only", lv_only_0_0, "only");
	    }

)
)
;





// Entry rule entryRuleCan
entryRuleCan returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCanRule()); }
	 iv_ruleCan=ruleCan 
	 { $current=$iv_ruleCan.current; } 
	 EOF 
;

// Rule Can
ruleCan returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_can_0_0=	'can-' 
    {
        newLeafNode(lv_can_0_0, grammarAccess.getCanAccess().getCanCanKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCanRule());
	        }
       		setWithLastConsumed($current, "can", lv_can_0_0, "can-");
	    }

)
)
;





// Entry rule entryRuleCannot
entryRuleCannot returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCannotRule()); }
	 iv_ruleCannot=ruleCannot 
	 { $current=$iv_ruleCannot.current; } 
	 EOF 
;

// Rule Cannot
ruleCannot returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_cannot_0_0=	'cannot-' 
    {
        newLeafNode(lv_cannot_0_0, grammarAccess.getCannotAccess().getCannotCannotKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCannotRule());
	        }
       		setWithLastConsumed($current, "cannot", lv_cannot_0_0, "cannot-");
	    }

)
)
;





// Entry rule entryRuleOnly2
entryRuleOnly2 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOnly2Rule()); }
	 iv_ruleOnly2=ruleOnly2 
	 { $current=$iv_ruleOnly2.current; } 
	 EOF 
;

// Rule Only2
ruleOnly2 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_only2_0_0=	'-only' 
    {
        newLeafNode(lv_only2_0_0, grammarAccess.getOnly2Access().getOnly2OnlyKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOnly2Rule());
	        }
       		setWithLastConsumed($current, "only2", lv_only2_0_0, "-only");
	    }

)
)
;





// Entry rule entryRuleMust
entryRuleMust returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMustRule()); }
	 iv_ruleMust=ruleMust 
	 { $current=$iv_ruleMust.current; } 
	 EOF 
;

// Rule Must
ruleMust returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_must_0_0=	'must-' 
    {
        newLeafNode(lv_must_0_0, grammarAccess.getMustAccess().getMustMustKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMustRule());
	        }
       		setWithLastConsumed($current, "must", lv_must_0_0, "must-");
	    }

)
)
;





// Entry rule entryRuleElementType
entryRuleElementType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getElementTypeRule()); }
	 iv_ruleElementType=ruleElementType 
	 { $current=$iv_ruleElementType.current; } 
	 EOF 
;

// Rule ElementType
ruleElementType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getElementTypeAccess().getBasicTypeParserRuleCall_0()); 
    }
    this_BasicType_0=ruleBasicType
    { 
        $current = $this_BasicType_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getElementTypeAccess().getEntityTypeParserRuleCall_1()); 
    }
    this_EntityType_1=ruleEntityType
    { 
        $current = $this_EntityType_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleBasicType
entryRuleBasicType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBasicTypeRule()); }
	 iv_ruleBasicType=ruleBasicType 
	 { $current=$iv_ruleBasicType.current; } 
	 EOF 
;

// Rule BasicType
ruleBasicType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_typeName_0_1=	'access' 
    {
        newLeafNode(lv_typeName_0_1, grammarAccess.getBasicTypeAccess().getTypeNameAccessKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasicTypeRule());
	        }
       		setWithLastConsumed($current, "typeName", lv_typeName_0_1, null);
	    }

    |		lv_typeName_0_2=	'declare' 
    {
        newLeafNode(lv_typeName_0_2, grammarAccess.getBasicTypeAccess().getTypeNameDeclareKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasicTypeRule());
	        }
       		setWithLastConsumed($current, "typeName", lv_typeName_0_2, null);
	    }

    |		lv_typeName_0_3=	'handle' 
    {
        newLeafNode(lv_typeName_0_3, grammarAccess.getBasicTypeAccess().getTypeNameHandleKeyword_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasicTypeRule());
	        }
       		setWithLastConsumed($current, "typeName", lv_typeName_0_3, null);
	    }

    |		lv_typeName_0_4=	'create' 
    {
        newLeafNode(lv_typeName_0_4, grammarAccess.getBasicTypeAccess().getTypeNameCreateKeyword_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasicTypeRule());
	        }
       		setWithLastConsumed($current, "typeName", lv_typeName_0_4, null);
	    }

    |		lv_typeName_0_5=	'depend' 
    {
        newLeafNode(lv_typeName_0_5, grammarAccess.getBasicTypeAccess().getTypeNameDependKeyword_0_4());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasicTypeRule());
	        }
       		setWithLastConsumed($current, "typeName", lv_typeName_0_5, null);
	    }

)

)
)
;





// Entry rule entryRuleEntityType
entryRuleEntityType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEntityTypeRule()); }
	 iv_ruleEntityType=ruleEntityType 
	 { $current=$iv_ruleEntityType.current; } 
	 EOF 
;

// Rule EntityType
ruleEntityType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_entity_0_1=	'extend' 
    {
        newLeafNode(lv_entity_0_1, grammarAccess.getEntityTypeAccess().getEntityExtendKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEntityTypeRule());
	        }
       		setWithLastConsumed($current, "entity", lv_entity_0_1, null);
	    }

    |		lv_entity_0_2=	'implement' 
    {
        newLeafNode(lv_entity_0_2, grammarAccess.getEntityTypeAccess().getEntityImplementKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEntityTypeRule());
	        }
       		setWithLastConsumed($current, "entity", lv_entity_0_2, null);
	    }

    |		lv_entity_0_3=	'derive' 
    {
        newLeafNode(lv_entity_0_3, grammarAccess.getEntityTypeAccess().getEntityDeriveKeyword_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEntityTypeRule());
	        }
       		setWithLastConsumed($current, "entity", lv_entity_0_3, null);
	    }

    |		lv_entity_0_4=	'throw' 
    {
        newLeafNode(lv_entity_0_4, grammarAccess.getEntityTypeAccess().getEntityThrowKeyword_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEntityTypeRule());
	        }
       		setWithLastConsumed($current, "entity", lv_entity_0_4, null);
	    }

    |		lv_entity_0_5=	'useannotation' 
    {
        newLeafNode(lv_entity_0_5, grammarAccess.getEntityTypeAccess().getEntityUseannotationKeyword_0_4());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEntityTypeRule());
	        }
       		setWithLastConsumed($current, "entity", lv_entity_0_5, null);
	    }

)

)
)
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


